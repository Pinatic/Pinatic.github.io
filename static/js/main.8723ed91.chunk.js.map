{"version":3,"sources":["logo.svg","api/api.js","components/SteamProfile.js","App.js","reportWebVitals.js","index.js"],"names":["API","callback","axios","get","endpoint","then","res","data","response","Container","styled","div","ProfileImage","props","url","ProfileCard","Name","span","Divider","Label","Value","StatusDot","color","Status","StatusText","getStatus","id","SteamProfile","useState","profileInfo","setProfileInfo","ownedGames","setOwnedGames","useEffect","getProfileInfo","result","getOwnedGames","console","log","avatarfull","personaname","personastate","end","game_count","duration","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,I,mDCGMA,E,4GAIKC,GAClBC,IAAMC,IAAIH,EAAII,SAAW,WAAWC,MAAK,SAAAC,GAAG,OAAIL,EAASK,EAAIC,W,oCAG5CN,GACjBC,IAAMC,IAAIH,EAAII,SAAW,eAAeC,MAAK,SAAAC,GAAG,OAAIL,EAASK,EAAIC,KAAKC,iB,KATzDR,EACVI,SAAW,qC,ssDCCtB,IAAMK,EAAYC,IAAOC,IAAV,KAYTC,EAAeF,IAAOC,IAAV,KACU,SAACE,GAAD,OAAWA,EAAMC,OAOvCC,EAAcL,IAAOC,IAAV,KASXK,EAAON,IAAOO,KAAV,KAKJC,EAAUR,IAAOC,IAAV,KAQPQ,EAAQT,IAAOO,KAAV,KAKLG,EAAQV,IAAOO,KAAV,KAMLI,EAAYX,IAAOC,IAAV,KAIS,SAAAE,GAAK,OAAIA,EAAMS,SAGjCC,EAASb,IAAOC,IAAV,KAMNa,EAAad,IAAOO,KAAV,KAKVQ,EAAY,SAACC,GACf,MAAO,CAAC,UAAW,SAAU,OAAQ,OAAQ,SAAU,mBAAoB,mBAAmBA,IAwCnFC,EAjCM,WAAO,IAJJD,EAIG,EAEeE,qBAFf,mBAEhBC,EAFgB,KAEHC,EAFG,OAGaF,qBAHb,mBAGhBG,EAHgB,KAGJC,EAHI,KAkBvB,OAbAC,qBAAU,WACNjC,EAAIkC,gBAAe,SAAAC,GAAM,OAAIL,EAAeK,QAC7C,IAGHF,qBAAU,WACNjC,EAAIoC,eAAc,SAAAD,GAAM,OAAIH,EAAcG,QAC3C,IAGHE,QAAQC,IAAIT,GACZQ,QAAQC,IAAIP,GAEL,cAACtB,EAAD,UAEKoB,GAAeE,GAAc,eAAChB,EAAD,WACzB,cAACH,EAAD,CAAcE,IAAKe,GAAeA,EAAYU,aAC9C,cAACvB,EAAD,UAAOa,EAAYW,cACnB,eAACjB,EAAD,WAAQ,cAACF,EAAD,CAAWC,OA3BfI,EA2BqCG,EAAYY,aA1B9D,CAAC,OAAQ,QAAS,MAAO,SAAU,SAAU,QAAS,UAAUf,MA0Be,cAACF,EAAD,UAAaC,EAAUI,EAAYY,mBACzG,cAACvB,EAAD,IACA,cAACC,EAAD,0BACA,cAACC,EAAD,UAAO,cAAC,IAAD,CAASsB,IAAKX,EAAWY,YAAc,IAAKC,SAAU,YClGlEC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8723ed91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import axios from 'axios'\r\n\r\n\r\nexport default class API {\r\n    static endpoint = \"https://pinatic-api.herokuapp.com/\"\r\n\r\n\r\n    static getProfileInfo(callback) {\r\n        axios.get(API.endpoint + 'summary').then(res => callback(res.data))\r\n    }\r\n\r\n    static getOwnedGames(callback) {\r\n        axios.get(API.endpoint + 'owned-games').then(res => callback(res.data.response))\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport API from '../api/api'\r\nimport styled from 'styled-components'\r\nimport CountUp from 'react-countup';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    animation: fadein 3s;\r\n\r\n    @keyframes fadein {\r\n        from { opacity: 0; }\r\n        to   { opacity: 1; }\r\n    }\r\n`\r\n\r\nconst ProfileImage = styled.div`\r\n    background-image: url(${(props) => props.url});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    height: 200px;\r\n    width: 200px;\r\n`\r\n\r\nconst ProfileCard = styled.div`\r\n    margin-top: 40px;\r\n    padding: 12px;\r\n    background-color: #a8a8a8;\r\n    border-radius: 4px;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n    text-align: center;\r\n`\r\n\r\nconst Name = styled.span`\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst Divider = styled.div`\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n    height: 1px;\r\n    background-color: black;\r\n    width: 100%;\r\n`\r\n\r\nconst Label = styled.span`\r\n    font-size: 20px;\r\n    display: inherit;\r\n`\r\n\r\nconst Value = styled.span`\r\n    display: inherit;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n`\r\n\r\nconst StatusDot = styled.div`\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 100%;\r\n    background-color: ${props => props.color};\r\n`\r\n\r\nconst Status = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst StatusText = styled.span`\r\n    margin-left: 4px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst getStatus = (id) => {\r\n    return [\"Offline\", \"Online\", \"Busy\", \"Away\", \"Snooze\", \"Looking to trade\", \"Looking to play\"][id]\r\n}\r\n\r\nconst getStatusColor = (id) => {\r\n    return [\"gray\", \"green\", \"red\", \"yellow\", \"orange\", \"brown\", \"purple\"][id]\r\n}\r\n\r\nconst SteamProfile = () => {\r\n\r\n    const [profileInfo, setProfileInfo] = useState();\r\n    const [ownedGames, setOwnedGames] = useState();\r\n\r\n    useEffect(() => {\r\n        API.getProfileInfo(result => setProfileInfo(result))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        API.getOwnedGames(result => setOwnedGames(result))\r\n    }, [])\r\n\r\n\r\n    console.log(profileInfo)\r\n    console.log(ownedGames)\r\n\r\n    return <Container>\r\n            {\r\n                profileInfo && ownedGames && <ProfileCard>\r\n                    <ProfileImage url={profileInfo && profileInfo.avatarfull}/>\r\n                    <Name>{profileInfo.personaname}</Name>\r\n                    <Status><StatusDot color={getStatusColor(profileInfo.personastate)} /><StatusText>{getStatus(profileInfo.personastate)}</StatusText></Status>\r\n                    <Divider />\r\n                    <Label>Owned games</Label>\r\n                    <Value><CountUp end={ownedGames.game_count || 200} duration={2} /></Value>\r\n                </ProfileCard>\r\n            }\r\n        </Container>\r\n}\r\n\r\n\r\nexport default SteamProfile","import logo from './logo.svg';\nimport './App.css';\nimport SteamProfile from './components/SteamProfile';\n\nfunction App() {\n  return (\n    <>\n      <SteamProfile />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["api/SteamProfiles.js","api/api.js","components/reusables/Status.js","components/reusables/Value.js","components/reusables/Label.js","components/reusables/Divider.js","components/reusables/ProfileImage.js","components/reusables/ProfileCard.js","components/steam/SteamProfile.js","components/reusables/Title.js","components/steam/SteamFriends.js","components/steam/ResentGames.js","components/the-hub/index.js","App.js","reportWebVitals.js","index.js"],"names":["Pieter","Jildert","Ilse","Rianne","IdMap","id","API","callback","axios","get","endpoint","SteamProfileMap","then","res","data","response","games","gameId","app","hash","StatusDot","styled","div","props","color","Status","StatusText","span","getStatus","getStatusColor","url","height","Gradients","GameID","idMap","Name","SteamProfile","useState","profileInfo","setProfileInfo","ownedGames","setOwnedGames","useParams","useEffect","getProfileInfo","result","getOwnedGames","ProfileCard","ProfileImage","avatarfull","personaname","personastate","Divider","Label","Value","game_count","end","duration","h4","Container","Box","SteamFriends","friends","setFriends","GetFriends","Title","friendslist","sort","a","b","friend_since","slice","map","friend","to","pathname","steamid","StyledProgess","ProgressBar","CustomProgess","progress","setProgress","setTimeout","now","ResentGames","resentGames","setResentGames","totalAchievements","setTotalAchievements","myAchievements","setMyAchievements","GetResentGames","forEach","game","GetGameAchievements","appid","achievements","prev","achievementpercentages","length","GetPlayerAchievements","playerAchievements","playerstats","img_logo_url","getGameImageUrl","name","Math","round","playtime_forever","striped","variant","style","marginTop","Button","disabled","TheHub","count","status","setStatus","getwillem","GetWillemStatus","interval","setInterval","clearInterval","onClick","OpenTheHub","console","log","Layout","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.788951ce.chunk.js","sourcesContent":["\r\nexport const Pieter = \"76561198137873527\";\r\nexport const Jildert = \"76561198042254620\";\r\nexport const Ilse = \"76561198401434810\";\r\nexport const Rianne = \"76561198798100412\";\r\n\r\n\r\nconst IdMap = {\r\n    \"\": Pieter,\r\n    \"pieter\": Pieter,\r\n    \"ilse\": Ilse,\r\n    \"jildert\": Jildert,\r\n    'rianne': Rianne,\r\n}\r\n\r\n// url parameter name id naar een echte id, als het kan, anders gewoon de id\r\nexport default (id) => {\r\n    id = id || \"\";\r\n    return IdMap[id] || id\r\n}\r\n\r\n","import axios from 'axios'\r\n\r\nimport SteamProfileMap from './SteamProfiles';\r\n\r\nexport default class API {\r\n    static endpoint = \"https://pinatic-api.herokuapp.com/\"\r\n    // static endpoint = \"http://localhost:3005/\"\r\n\r\n    static getProfileInfo(id, callback) {\r\n        axios.get(API.endpoint + 'summary/' + SteamProfileMap(id)).then(res => callback(res.data))\r\n    }\r\n\r\n    static getOwnedGames(id, callback) {\r\n        axios.get(API.endpoint + 'owned-games/' + SteamProfileMap(id)).then(res => callback(res.data.response))\r\n    }\r\n\r\n    static GetFriends(id, callback) {\r\n        axios.get(API.endpoint + 'friends/' + SteamProfileMap(id)).then(res => callback(res.data))\r\n    }\r\n\r\n    static GetResentGames(id, callback) {\r\n        axios.get(API.endpoint + 'resent-games/' + SteamProfileMap(id)).then(res => callback(res.data.response.games))\r\n    }\r\n\r\n    static GetGameAchievements(gameId, callback) {\r\n        axios.get(API.endpoint + 'achievements/' + gameId).then(res => callback(res.data))\r\n    }\r\n\r\n    static GetPlayerAchievements(id, gameId, callback) {\r\n        axios.get(API.endpoint + 'stats/' + SteamProfileMap(id) + '/' + gameId).then(res => callback(res.data))\r\n    }\r\n\r\n    static getGameImageUrl(app, hash) {\r\n        return API.endpoint + 'game-image/' + app + '/' + hash;\r\n    }\r\n\r\n    static GetWillemStatus(callback) {\r\n        axios.get(API.endpoint + 'willem-status').then(res => callback(res.data))\r\n    }\r\n\r\n    static OpenTheHub(callback) {\r\n        axios.get(API.endpoint + 'the-hub').then(res => callback(res.data))\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nconst StatusDot = styled.div`\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 100%;\r\n    background-color: ${props => props.color};\r\n`\r\n\r\nconst Status = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst StatusText = styled.span`\r\n    margin-left: 4px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst getStatus = (id) => {\r\n    return [\"Offline\", \"Online\", \"Busy\", \"Away\", \"Snooze\", \"Looking to trade\", \"Looking to play\"][id]\r\n}\r\n\r\nconst getStatusColor = (id) => {\r\n    return [\"gray\", \"green\", \"red\", \"yellow\", \"orange\", \"brown\", \"purple\"][id]\r\n}\r\n\r\nexport { Status, StatusDot, StatusText, getStatus, getStatusColor };","import styled from 'styled-components';\r\n\r\nexport default styled.span`\r\n    display: inherit;\r\n    font-size: 24px;\r\n    font-weight: 400;\r\n`","import styled from 'styled-components';\r\n\r\nexport default styled.span`\r\n    font-size: 20px;\r\n    display: inherit;\r\n`","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    height: 1px;\r\n    background-color: #5d5d5d;\r\n    width: 95%;\r\n    margin: 0 auto;\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n`","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    background-image: url(${(props) => props.url});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    height: ${(props) => props.height || 200}px;\r\n    width: 200px;\r\n`","import styled from 'styled-components';\r\nimport idMap, { Jildert, Pieter, Ilse, Rianne } from '../../api/SteamProfiles';\r\n\r\nconst Gradients = {\r\n    [Jildert]:  'linear-gradient(140deg,#4e4e4e 0%,#626262 50%,#792e2e 75%)',\r\n    [Pieter]:   'linear-gradient(140deg,#442d48 0%,#646060 50%,#583b8d 75%)',\r\n    [Ilse]:     'linear-gradient(140deg,#96bfc3 0%,#929598 50%,#00a8f4 75%)',\r\n    [Rianne]:   'linear-gradient(140deg,#fff9c8 0%,#fbffd4 50%,#FFEB3B 75%)'\r\n}\r\n\r\nexport default styled.div`\r\n    margin-top: 8px;\r\n    padding: 12px;\r\n\r\n    background-color: #a8a8a8;\r\n\r\n    background-image: ${({ GameID }) => Gradients[idMap(GameID)] || ''};\r\n\r\n    border-radius: 4px;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n    text-align: center;\r\n`","import React, { useEffect, useState } from 'react'\r\nimport API from '../../api/api'\r\nimport styled from 'styled-components'\r\nimport CountUp from 'react-countup';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Status, StatusDot, StatusText, getStatus, getStatusColor } from '../reusables/Status';\r\nimport Value from '../reusables/Value';\r\nimport Label from '../reusables/Label';\r\nimport Divider from '../reusables/Divider';\r\nimport ProfileImage from '../reusables/ProfileImage';\r\nimport ProfileCard from '../reusables/ProfileCard';\r\n\r\nconst Name = styled.span`\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst SteamProfile = (props) => {\r\n    const [profileInfo, setProfileInfo] = useState();\r\n    const [ownedGames, setOwnedGames] = useState();\r\n    const { id } = useParams();\r\n\r\n    // From props or url\r\n    const GameID = props.gameId || id;\r\n\r\n    useEffect(() => {\r\n        API.getProfileInfo(GameID, result => setProfileInfo(result))\r\n    }, [GameID])\r\n\r\n\r\n    useEffect(() => {\r\n        API.getOwnedGames(GameID, result => setOwnedGames(result))\r\n    }, [GameID])\r\n\r\n    return profileInfo && ownedGames ? <ProfileCard GameID={GameID}>\r\n        <ProfileImage url={profileInfo && profileInfo.avatarfull}/>\r\n        <Name>{profileInfo.personaname}</Name>\r\n        <Status><StatusDot color={getStatusColor(profileInfo.personastate)} /><StatusText>{getStatus(profileInfo.personastate)}</StatusText></Status>\r\n        <Divider />\r\n        <Label>Owned games</Label>\r\n        <Value>{ ownedGames.game_count ?<CountUp end={ownedGames.game_count} duration={2} /> : 'N.A'}</Value>\r\n    </ProfileCard> : <></>\r\n}\r\n\r\n\r\nexport default SteamProfile","import styled from 'styled-components'\r\n\r\nexport default styled.h4`\r\n    color: #c9c9c9;\r\n    font-size: 29px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components';\r\n\r\nimport API from '../../api/api';\r\nimport Title from '../reusables/Title';\r\nimport SteamProfile from './SteamProfile';\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    animation: fadein 3s;\r\n\r\n    @media (max-width: 768px) {\r\n        display: grid;\r\n    }\r\n\r\n`\r\n\r\nconst Box = styled.div`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst SteamFriends = () => {\r\n    const [friends, setFriends] = useState();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        API.GetFriends(id, res => {\r\n            setFriends(res)\r\n        })\r\n    }, [id])\r\n\r\n    return <>\r\n        <Title>My first three Friends</Title>\r\n        <Container>\r\n            {\r\n                friends && friends.friendslist.friends.sort((a,b) => a.friend_since - b.friend_since).slice(0, 3).map(friend => {\r\n                return <Link \r\n                    key={friend.steamid}\r\n                    to={{\r\n                        pathname: '/' + friend.steamid \r\n                    }}\r\n                >\r\n                    <Box>\r\n                        <SteamProfile key={friend.steamid} gameId={friend.steamid} />\r\n                    </Box>\r\n                </Link>\r\n                })\r\n            }\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default SteamFriends","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useParams } from 'react-router-dom'\r\nimport API from '../../api/api';\r\n\r\nimport ProfileImage from '../reusables/ProfileImage'\r\nimport ProfileCard from '../reusables/ProfileCard'\r\n\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Label from '../reusables/Label';\r\nimport Value from '../reusables/Value';\r\nimport Divider from '../reusables/Divider';\r\nimport Title from '../reusables/Title';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    animation: fadein 3s;\r\n\r\n    @media (max-width: 768px) {\r\n        display: grid;\r\n    }\r\n`\r\n\r\nconst Box = styled.div`\r\n  padding: 10px;\r\n  margin: 5px;\r\n`\r\n\r\nconst Name = styled.span`\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst StyledProgess = styled(ProgressBar)`\r\n    .progress-bar {\r\n        transition: width 2s linear;\r\n    }\r\n`\r\n\r\n\r\nconst CustomProgess = (props) => {\r\n    const [progress, setProgress] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setProgress(props.now)\r\n        }, 1)\r\n    }, [props.now])\r\n\r\n    return <StyledProgess {...props} now={progress} />\r\n}\r\n\r\nconst getGameImageUrl = (appid, hash) => {\r\n    return API.getGameImageUrl(appid, hash);\r\n}\r\n\r\nconst ResentGames = () => {\r\n    const [resentGames, setResentGames] = useState();\r\n    const [totalAchievements, setTotalAchievements] = useState({});\r\n    const [myAchievements, setMyAchievements] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        API.GetResentGames(id, (res) => {\r\n            setResentGames(res)\r\n\r\n            res && res.forEach(game => {\r\n                API.GetGameAchievements(game.appid, (achievements => {\r\n                    setTotalAchievements(prev => ({...prev, [game.appid]: achievements.achievementpercentages.achievements.length}))\r\n                }))\r\n\r\n                API.GetPlayerAchievements(id, game.appid, (playerAchievements => {\r\n                    setMyAchievements(prev => ({...prev, [game.appid]: playerAchievements.playerstats.achievements.length}))\r\n                }))\r\n            });\r\n        })\r\n    }, [id])\r\n\r\n    return resentGames ? <>\r\n    <Title>My recent games</Title>\r\n    <Container>\r\n        { resentGames.slice(0,4).map(game => {\r\n            return <Box key={game.appid}>\r\n                <ProfileCard GameID={game.appid}>\r\n                    <ProfileImage height={85} url={getGameImageUrl(game.appid, game.img_logo_url)}/>\r\n                    <Name>{game.name}</Name>\r\n                    <Divider />\r\n\r\n                    <Label>PlayTime</Label>\r\n                    <Value><CountUp end={Math.round(game.playtime_forever / 60)} duration={2} /> hours</Value>\r\n                    { \r\n                        totalAchievements[game.appid] ? <>\r\n                            <Divider />\r\n                            <Label>Progress</Label>\r\n                            <CustomProgess striped variant=\"success\" now={100 / totalAchievements[game.appid] * myAchievements[game.appid]} />\r\n                        </> : <div style={{marginTop: 63}} />\r\n                    }\r\n                </ProfileCard>\r\n            </Box>\r\n        })}\r\n    </Container>\r\n    </> : null\r\n}\r\n\r\nexport default ResentGames;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nimport Card from '../reusables/ProfileCard'\r\nimport Label from '../reusables/Label'\r\nimport Value from '../reusables/Value'\r\nimport Divider from '../reusables/Divider';\r\nimport { Status, StatusDot, StatusText, getStatus, getStatusColor } from '../reusables/Status';\r\nimport API from '../../api/api';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    animation: fadein 3s;\r\n    margin-bottom: 24px;\r\n    margin-top: 24px;\r\n`\r\nconst Name = styled.span`\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst Button = styled.div`\r\n    cursor: pointer;\r\n    background-color: gray;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    border-radius: 4px;\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n    padding: 4px;\r\n\r\n    &:hover{\r\n        background-color: darkgray;\r\n    }\r\n\r\n    ${({disabled}) => disabled && `\r\n        cursor: initial;\r\n        opacity: 0.6;\r\n        &:hover{\r\n            background-color: gray;\r\n        }\r\n    `}\r\n\r\n`\r\n\r\nconst TheHub = () => {\r\n    const [status, setStatus] = useState({\r\n        count: 0,\r\n        status: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        const getwillem = () => {\r\n            API.GetWillemStatus(res => {\r\n                setStatus(res)\r\n            })\r\n        }\r\n\r\n        getwillem()\r\n\r\n        // 10 seconds\r\n        const interval = setInterval(() => {\r\n            getwillem()\r\n        }, 10000)\r\n\r\n        return () => clearInterval(interval)\r\n\r\n    }, [])\r\n\r\n    const openTheHub = () => {\r\n        API.OpenTheHub(console.log);\r\n    }\r\n\r\n    const disabled = status.status === 0;\r\n\r\n    return <Container>\r\n            <Card>\r\n                <Label>The hub has been opened:</Label>\r\n                <Value><CountUp end={status.count} duration={2} /> times.</Value>\r\n                <Divider />\r\n                <Name>Willem PC</Name>\r\n                <Status><StatusDot color={getStatusColor(status.status)} /><StatusText>{getStatus(status.status)}</StatusText></Status>\r\n                <Divider />\r\n                <Button onClick={!disabled ? openTheHub : () => {}} disabled={disabled}>Open The Hub</Button>\r\n            </Card>\r\n        </Container>\r\n}\r\n\r\nexport default TheHub;","import styled from 'styled-components'\r\nimport SteamProfile from './components/steam/SteamProfile';\r\nimport SteamFriends from './components/steam/SteamFriends';\r\nimport Divider from './components/reusables/Divider';\r\nimport ResentGames from './components/steam/ResentGames';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css';\r\nimport TheHub from './components/the-hub';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    animation: fadein 3s;\r\n    margin-bottom: 24px;\r\n    margin-top: 24px;\r\n\r\n    @keyframes fadein {\r\n        from { opacity: 0; }\r\n        to   { opacity: 1; }\r\n    }\r\n`\r\n\r\nconst Layout = () => {\r\n  return <>\r\n    <Container>\r\n      <SteamProfile />\r\n    </Container>\r\n    <Divider />\r\n    <ResentGames />\r\n    <Divider />\r\n    <SteamFriends />\r\n  </>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/the-hub\">\r\n          <TheHub />\r\n        </Route>\r\n        <Route path=\"/:id\">\r\n          <Layout />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Layout />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}